name: cardano
on:
  push:
    tags:
      - '*'
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize]
jobs:
  test:
    name: ${{ matrix.os }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Cache Cardano
        uses: actions/cache@v2
        with:
          path: |
            ~/.cabal/packages
            ~/.cardano
            ~/.cabal/store
            dist-newstyle
          key: ${{ matrix.target}}-${{ matrix.target.ghc }}
      - name: Cache Rust
        uses: Swatinem/rust-cache@v1
      - name: Install Prerequisites
        run: |
          case ${{ matrix.target }} in
            *-unknown-linux-*)
              sudo apt-get update -y
              sudo apt-get install automake build-essential pkg-config libffi-dev libgmp-dev libssl-dev libtinfo-dev libsystemd-dev zlib1g-dev make g++ tmux git jq wget libncursesw5 libtool autoconf -y
              ;;
            *-apple-darwin)
              brew install automake
              ;;
          esac
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.os.toolchain || 'stable' }}
          target: ${{ matrix.target }}
          override: true
          default: true
          components: rustfmt, clippy
      - name: Format
        uses: actions-rs/cargo@v1.0.1
        with:
          command: fmt
          args: --all -- --check
      - name: Lint (Clippy)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --release --target ${{ matrix.target }} -- -D warnings
      - name: Run tests
        uses: actions-rs/cargo@v1.0.1
        with: 
          use-cross: ${{ matrix.os.use-cross }}
          command: test
          args: --workspace --release --target ${{ matrix.target }}
      - name: Build Cardano CLI 
        uses: actions-rs/cargo@v1.0.1
        with:
          use-cross: ${{ matrix.os.use-cross }}
          command: build
          args: --release --target ${{ matrix.target }} --locked
      - name: Build cardano-node
        run: target/${{matrix.target}}/release/cardano node install -y
      - name: Package
        id: package
        run: |
          PROJECT_NAME="$(sed -n 's/^name = "\(.*\)"/\1/p' Cargo.toml)"
          PROJECT_VERSION="$(sed -n 's/^version = "\(.*\)"/\1/p' Cargo.toml | head -n1)"
          PKG_SUFFIX=".tar.gz"
          PKG_NAME="${PROJECT_NAME}-${PROJECT_VERSION}-${{ matrix.target }}${PKG_SUFFIX}"
          tar -C target/${{matrix.target}}/release -czf "${PKG_NAME}" cardano
          echo ::set-output name=PKG_NAME::${PKG_NAME}
          echo ::set-output name=PKG_PATH::${PKG_NAME}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.package.outputs.PKG_NAME }}
          path: ${{ steps.package.outputs.PKG_PATH }}
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: ${{ steps.package.outputs.PKG_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
