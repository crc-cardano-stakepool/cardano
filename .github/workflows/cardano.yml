name: cardano
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize]
jobs:
  build:
    name: ${{ matrix.job.os }} (${{ matrix.job.target }}
    runs-on: ${{ matrix.job.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          - { os: macos-latest, target: x86_64-apple-darwin } 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install prerequisites
        run: |
          case ${{ matrix.job.target }} in
            *-unknown-linux-*)
              sudo apt-get update -y
              sudo apt-get install automake build-essential pkg-config libffi-dev libgmp-dev libssl-dev libtinfo-dev libsystemd-dev zlib1g-dev make g++ tmux git jq wget libncursesw5 libtool autoconf -y
              ;;
            *-apple-darwin)
              brew install automake
              ;;
          esac
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.job.toolchain || 'stable' }}
          target: ${{ matrix.job.target }}
          override: true
          default: true
          components: rustfmt
      - name: Build Libsodium
        if: contains(matrix.job.features, 'libsodium-sys')
        run: autoreconf -vfi && ./configure && make && make install
        working-directory: contrib/libsodium
      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features --target ${{ matrix.job.target }}
      - name: Build Cardano CLI 
        uses: actions-rs/cargo@v1.0.1
        with:
          command: build
          args: --release --all-features --target ${{ matrix.job.target }}
